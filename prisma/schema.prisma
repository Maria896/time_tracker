generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int           @id @default(autoincrement())
  name                 String
  email                String        @unique
  password             String
  role                 UserRole?
  designation          Designations?
  is_verified          Boolean       @default(false)
  verification_token   String?
  token_expiration     DateTime?
  created_projects     Project[]
  time_entries         TimeEntry[]
  assigned_projects    UserProject[]
  created_organization Organization? @relation("ownerOf")
  employee_of          Organization? @relation("employeeOf", fields: [employeeId], references: [id])
  employeeId           Int?
  is_employee          Boolean       @default(false)
}

model Organization {
  id                Int      @id @default(autoincrement())
  organization_name String
  ownerId           Int      @unique
  owner             User     @relation("ownerOf", fields: [ownerId], references: [id])
  industry_type     INDUSTRY
  company_strength  Int
  employees         User[]   @relation("employeeOf")
  created_at        DateTime @default(now())
}

model Project {
  id             Int           @id @default(autoincrement())
  project_name   String
  created_at     DateTime      @default(now())
  estimated_time DateTime?
  actual_time    DateTime?
  status         ProjectStatus @default(INPROGRESS)
  creatorId      Int
  creator        User          @relation(fields: [creatorId], references: [id])
  time_entries   TimeEntry[]
  users          UserProject[]
}

model UserProject {
  userId    Int
  projectId Int

  user    User    @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  @@id([userId, projectId])
}

model TimeEntry {
  id         Int      @id @default(autoincrement())
  start_time DateTime
  end_time   DateTime
  userId     Int
  projectId  Int
  project    Project  @relation(fields: [projectId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}

enum UserRole {
  EMPLOYEE
  OWNER
}

enum Designations {
  ASSOCIATE_SOFTWARE_ENGINEER
  SOFTWARE_ENGINEER
  QA_EXECUTIVE
  PRODUCT_MANAGER
}

enum ProjectStatus {
  COMPLETED
  INPROGRESS
  STOPPED
}

enum INDUSTRY {
  MANUFACTURING
  SERVICE
  TECHNOLOGY
  HEALTHCARE
  FINANCIAL
  RETAIL
  ENERGY
  AGRICULTURE
  TRANSPORTATION
  ENTERTAINMENT
  CONSTRUCTION
  EDUCATION
}
